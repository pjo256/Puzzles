JAVA PROFILE 1.0.1, created Thu Feb  6 18:44:37 2014

Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

%W% %E%

 Copyright (c) 2006 Sun Microsystems, Inc. All  Rights Reserved.

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=50000153, id = 200001, name="main", group="main")
THREAD END (id = 200001)
THREAD START (obj=50000270, id = 200005, name="DestroyJavaVM", group="main")
THREAD START (obj=50000274, id = 200006, name="Thread-0", group="main")
THREAD END (id = 200006)
THREAD END (id = 200005)
THREAD END (id = 200002)
TRACE 300262:
	java.io.FileOutputStream.writeBytes(FileOutputStream.java:Unknown line)
	java.io.FileOutputStream.write(FileOutputStream.java:282)
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:105)
	java.io.PrintStream.write(PrintStream.java:430)
TRACE 300009:
	java.util.zip.ZipFile.open(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.<init>(ZipFile.java:127)
	java.util.jar.JarFile.<init>(JarFile.java:136)
	java.util.jar.JarFile.<init>(JarFile.java:73)
TRACE 300239:
	java.lang.String.<init>(String.java:215)
	java.io.BufferedReader.readLine(BufferedReader.java:331)
	java.io.BufferedReader.readLine(BufferedReader.java:362)
	K_Occurrence_2.main(K_Occurrence_2.java:30)
TRACE 300240:
	java.lang.String.indexOf(String.java:1521)
	java.util.StringTokenizer.skipDelimiters(StringTokenizer.java:235)
	java.util.StringTokenizer.nextToken(StringTokenizer.java:324)
	K_Occurrence_2.main(K_Occurrence_2.java:48)
TRACE 300247:
	java.util.StringTokenizer.scanToken(StringTokenizer.java:261)
	java.util.StringTokenizer.nextToken(StringTokenizer.java:334)
	K_Occurrence_2.main(K_Occurrence_2.java:49)
TRACE 300250:
	java.util.StringTokenizer.setMaxDelimCodePoint(StringTokenizer.java:134)
	java.util.StringTokenizer.<init>(StringTokenizer.java:185)
	java.util.StringTokenizer.<init>(StringTokenizer.java:219)
	K_Occurrence_2.main(K_Occurrence_2.java:32)
TRACE 300237:
	java.io.BufferedReader.readLine(BufferedReader.java:362)
	K_Occurrence_2.main(K_Occurrence_2.java:30)
TRACE 300229:
	java.util.Arrays.copyOfRange(Arrays.java:3209)
	java.lang.String.<init>(String.java:215)
	java.io.BufferedReader.readLine(BufferedReader.java:331)
	java.io.BufferedReader.readLine(BufferedReader.java:362)
TRACE 300248:
	java.lang.Integer.getChars(Integer.java:349)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:598)
	java.lang.StringBuilder.append(StringBuilder.java:212)
	K_Occurrence_2.queryKthVal(K_Occurrence_2.java:89)
TRACE 300244:
	java.lang.Integer.parseInt(Integer.java:499)
	K_Occurrence_2.main(K_Occurrence_2.java:49)
TRACE 300245:
	java.lang.Integer.parseInt(Integer.java:499)
	K_Occurrence_2.main(K_Occurrence_2.java:48)
TRACE 300249:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:516)
	java.lang.StringBuffer.append(StringBuffer.java:306)
	java.io.BufferedReader.readLine(BufferedReader.java:345)
TRACE 300251:
	java.lang.String.indexOf(String.java:1521)
	java.util.StringTokenizer.skipDelimiters(StringTokenizer.java:235)
	java.util.StringTokenizer.hasMoreTokens(StringTokenizer.java:306)
	K_Occurrence_2.main(K_Occurrence_2.java:41)
TRACE 300232:
	java.util.Arrays.copyOfRange(Arrays.java:3206)
	java.lang.String.<init>(String.java:215)
	java.io.BufferedReader.readLine(BufferedReader.java:331)
	java.io.BufferedReader.readLine(BufferedReader.java:362)
TRACE 300241:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.nio.HeapByteBuffer.compact(HeapByteBuffer.java:204)
	sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:250)
	sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:306)
TRACE 300061:
	java.io.FileInputStream.close0(FileInputStream.java:Unknown line)
	java.io.FileInputStream.close(FileInputStream.java:304)
	java.io.BufferedInputStream.close(BufferedInputStream.java:451)
	java.security.Security.initialize(Security.java:71)
TRACE 300238:
	java.util.StringTokenizer.scanToken(StringTokenizer.java:261)
	java.util.StringTokenizer.nextToken(StringTokenizer.java:334)
	K_Occurrence_2.main(K_Occurrence_2.java:42)
TRACE 300230:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.lang.String.getChars(String.java:854)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:391)
	java.lang.StringBuilder.append(StringBuilder.java:119)
TRACE 300255:
	java.io.FileInputStream.readBytes(FileInputStream.java:Unknown line)
	java.io.FileInputStream.read(FileInputStream.java:220)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:256)
	java.io.BufferedInputStream.read(BufferedInputStream.java:317)
TRACE 300257:
	K_Occurrence_2.main(K_Occurrence_2.java:48)
TRACE 300258:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:516)
	java.lang.StringBuffer.append(StringBuffer.java:306)
	java.io.BufferedReader.readLine(BufferedReader.java:333)
TRACE 300259:
	java.lang.String.substring(String.java:1939)
	java.util.StringTokenizer.nextToken(StringTokenizer.java:335)
	K_Occurrence_2.main(K_Occurrence_2.java:48)
TRACE 300260:
	java.lang.Integer.parseInt(Integer.java:499)
	K_Occurrence_2.main(K_Occurrence_2.java:42)
TRACE 300261:
	sun.nio.cs.SingleByteEncoder.encodeArrayLoop(SingleByteEncoder.java:68)
	sun.nio.cs.SingleByteEncoder.encodeLoop(SingleByteEncoder.java:130)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:544)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:252)
TRACE 300263:
	sun.nio.cs.SingleByteEncoder.encodeArrayLoop(SingleByteEncoder.java:73)
	sun.nio.cs.SingleByteEncoder.encodeLoop(SingleByteEncoder.java:130)
	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:544)
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:252)
TRACE 300264:
	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:251)
	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:106)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:190)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:111)
TRACE 300210:
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:1000)
	sun.misc.URLClassPath.getResource(URLClassPath.java:169)
	java.net.URLClassLoader$1.run(URLClassLoader.java:194)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
TRACE 300192:
	sun.security.provider.SHA.implCompress(SHA.java:121)
	sun.security.provider.DigestBase.engineUpdate(DigestBase.java:122)
	java.security.MessageDigest$Delegate.engineUpdate(MessageDigest.java:538)
	java.security.MessageDigest.update(MessageDigest.java:283)
TRACE 300060:
	java.util.Arrays.copyOfRange(Arrays.java:3209)
	java.lang.String.<init>(String.java:215)
	java.util.Properties.loadConvert(Properties.java:568)
	java.util.Properties.load0(Properties.java:374)
TRACE 300137:
	sun.security.x509.CertificateExtensions.<init>(CertificateExtensions.java:41)
	sun.security.x509.X509CertInfo.parse(X509CertInfo.java:723)
	sun.security.x509.X509CertInfo.<init>(X509CertInfo.java:152)
	sun.security.x509.X509CertImpl.parse(X509CertImpl.java:1731)
TRACE 300195:
	java.math.BigInteger.addOne(BigInteger.java:1923)
	java.math.BigInteger.montReduce(BigInteger.java:1853)
	java.math.BigInteger.oddModPow(BigInteger.java:1822)
	java.math.BigInteger.modPow(BigInteger.java:1571)
TRACE 300196:
	java.math.BigInteger.squareToLen(BigInteger.java:1274)
	java.math.BigInteger.oddModPow(BigInteger.java:1821)
	java.math.BigInteger.modPow(BigInteger.java:1571)
	sun.security.provider.DSA.generateV(DSA.java:374)
TRACE 300197:
	java.math.BigInteger.montReduce(BigInteger.java:1846)
	java.math.BigInteger.oddModPow(BigInteger.java:1822)
	java.math.BigInteger.modPow(BigInteger.java:1571)
	sun.security.provider.DSA.generateV(DSA.java:375)
TRACE 300036:
	java.util.jar.JarVerifier.<init>(JarVerifier.java:742)
	java.util.jar.JarFile.getManifestFromReference(JarFile.java:165)
	java.util.jar.JarFile.getManifest(JarFile.java:149)
	java.util.jar.JarFile.maybeInstantiateVerifier(JarFile.java:290)
TRACE 300075:
	sun.security.util.DerInputBuffer.getBigInteger(DerInputBuffer.java:136)
	sun.security.util.DerInputStream.getBigInteger(DerInputStream.java:165)
	sun.security.pkcs.PKCS7.parseSignedData(PKCS7.java:220)
	sun.security.pkcs.PKCS7.parse(PKCS7.java:141)
TRACE 300014:
	java.util.jar.JarFile.getEntry(JarFile.java:211)
	java.util.jar.JarFile.getJarEntry(JarFile.java:192)
	java.util.jar.JarFile.getManEntry(JarFile.java:439)
	java.util.jar.JarFile.hasClassPathAttribute(JarFile.java:469)
TRACE 300097:
	java.lang.String.toLowerCase(String.java:2417)
	java.security.Provider.parseLegacyPut(Provider.java:576)
	java.security.Provider.ensureLegacyParsed(Provider.java:537)
	java.security.Provider.getService(Provider.java:676)
TRACE 300203:
	sun.security.provider.SHA.implCompress(SHA.java:105)
	sun.security.provider.DigestBase.engineUpdate(DigestBase.java:122)
	java.security.MessageDigest$Delegate.engineUpdate(MessageDigest.java:538)
	java.security.MessageDigest.update(MessageDigest.java:283)
TRACE 300175:
	java.util.regex.Pattern.newSingle(Pattern.java:2951)
	java.util.regex.Pattern.atom(Pattern.java:1985)
	java.util.regex.Pattern.sequence(Pattern.java:1834)
	java.util.regex.Pattern.expr(Pattern.java:1752)
TRACE 300224:
	java.security.Permissions.add(Permissions.java:124)
	java.net.URLClassLoader.getPermissions(URLClassLoader.java:520)
	sun.misc.Launcher$AppClassLoader.getPermissions(Launcher.java:309)
	java.security.SecureClassLoader.getProtectionDomain(SecureClassLoader.java:235)
TRACE 300154:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.util.jar.Manifest$FastInputStream.readLine(Manifest.java:370)
	java.util.jar.Manifest$FastInputStream.readLine(Manifest.java:390)
	java.util.jar.Attributes.read(Attributes.java:359)
TRACE 300116:
	sun.security.x509.RDN.<init>(RDN.java:230)
	sun.security.x509.X500Name.parseDER(X500Name.java:787)
	sun.security.x509.X500Name.<init>(X500Name.java:290)
	sun.security.x509.CertificateIssuerName.<init>(CertificateIssuerName.java:65)
TRACE 300208:
	java.security.Provider.getTypeAndAlgorithm(Provider.java:568)
	java.security.Provider.parseLegacyPut(Provider.java:598)
	java.security.Provider.ensureLegacyParsed(Provider.java:537)
	java.security.Provider.getService(Provider.java:676)
TRACE 300231:
	java.util.ArrayList.ensureCapacity(ArrayList.java:159)
	java.util.ArrayList.add(ArrayList.java:351)
	K_Occurrence_2.main(K_Occurrence_2.java:43)
TRACE 300233:
	java.lang.StringBuffer.append(StringBuffer.java:306)
	java.io.BufferedReader.readLine(BufferedReader.java:345)
	java.io.BufferedReader.readLine(BufferedReader.java:362)
	K_Occurrence_2.main(K_Occurrence_2.java:30)
TRACE 300234:
	java.lang.Integer.parseInt(Integer.java:416)
	java.lang.Integer.parseInt(Integer.java:499)
	K_Occurrence_2.main(K_Occurrence_2.java:48)
TRACE 300235:
	java.lang.Integer.parseInt(Integer.java:416)
	java.lang.Integer.parseInt(Integer.java:499)
	K_Occurrence_2.main(K_Occurrence_2.java:49)
TRACE 300236:
	K_Occurrence_2.main(K_Occurrence_2.java:49)
TRACE 300242:
	java.io.BufferedReader.readLine(BufferedReader.java:331)
	java.io.BufferedReader.readLine(BufferedReader.java:362)
	K_Occurrence_2.main(K_Occurrence_2.java:30)
TRACE 300026:
	java.util.HashMap.<init>(HashMap.java:209)
	java.util.HashSet.<init>(HashSet.java:86)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:764)
	sun.misc.URLClassPath.getResource(URLClassPath.java:169)
TRACE 300246:
	java.lang.String.indexOf(String.java:1521)
	java.util.StringTokenizer.scanToken(StringTokenizer.java:258)
	java.util.StringTokenizer.nextToken(StringTokenizer.java:334)
	K_Occurrence_2.main(K_Occurrence_2.java:48)
TRACE 300252:
	java.nio.Buffer.position(Buffer.java:215)
	sun.nio.cs.SingleByteDecoder.decodeArrayLoop(SingleByteDecoder.java:56)
	sun.nio.cs.SingleByteDecoder.decodeLoop(SingleByteDecoder.java:83)
	java.nio.charset.CharsetDecoder.decode(CharsetDecoder.java:544)
TRACE 300253:
	java.lang.String.substring(String.java:1939)
	java.util.StringTokenizer.nextToken(StringTokenizer.java:335)
	K_Occurrence_2.main(K_Occurrence_2.java:42)
TRACE 300254:
	K_Occurrence_2.main(K_Occurrence_2.java:43)
TRACE 300256:
	K_Occurrence_2.main(K_Occurrence_2.java:42)
CPU SAMPLES BEGIN (total = 281) Thu Feb  6 18:44:40 2014
rank   self  accum   count trace method
   1 64.06% 64.06%     180 300262 java.io.FileOutputStream.writeBytes
   2  4.27% 68.33%      12 300009 java.util.zip.ZipFile.open
   3  3.20% 71.53%       9 300239 java.lang.String.<init>
   4  1.42% 72.95%       4 300240 java.lang.String.indexOf
   5  1.42% 74.38%       4 300247 java.util.StringTokenizer.scanToken
   6  1.42% 75.80%       4 300250 java.util.StringTokenizer.setMaxDelimCodePoint
   7  1.42% 77.22%       4 300237 java.io.BufferedReader.readLine
   8  1.07% 78.29%       3 300229 java.util.Arrays.copyOfRange
   9  1.07% 79.36%       3 300248 java.lang.Integer.getChars
  10  1.07% 80.43%       3 300244 java.lang.Integer.parseInt
  11  1.07% 81.49%       3 300245 java.lang.Integer.parseInt
  12  0.71% 82.21%       2 300249 java.lang.System.arraycopy
  13  0.71% 82.92%       2 300251 java.lang.String.indexOf
  14  0.71% 83.63%       2 300232 java.util.Arrays.copyOfRange
  15  0.71% 84.34%       2 300241 java.lang.System.arraycopy
  16  0.71% 85.05%       2 300061 java.io.FileInputStream.close0
  17  0.71% 85.77%       2 300238 java.util.StringTokenizer.scanToken
  18  0.71% 86.48%       2 300230 java.lang.System.arraycopy
  19  0.71% 87.19%       2 300255 java.io.FileInputStream.readBytes
  20  0.36% 87.54%       1 300257 K_Occurrence_2.main
  21  0.36% 87.90%       1 300258 java.lang.System.arraycopy
  22  0.36% 88.26%       1 300259 java.lang.String.substring
  23  0.36% 88.61%       1 300260 java.lang.Integer.parseInt
  24  0.36% 88.97%       1 300261 sun.nio.cs.SingleByteEncoder.encodeArrayLoop
  25  0.36% 89.32%       1 300263 sun.nio.cs.SingleByteEncoder.encodeArrayLoop
  26  0.36% 89.68%       1 300264 sun.nio.cs.StreamEncoder.implWrite
  27  0.36% 90.04%       1 300210 sun.misc.URLClassPath$FileLoader.getResource
  28  0.36% 90.39%       1 300192 sun.security.provider.SHA.implCompress
  29  0.36% 90.75%       1 300060 java.util.Arrays.copyOfRange
  30  0.36% 91.10%       1 300137 sun.security.x509.CertificateExtensions.<init>
  31  0.36% 91.46%       1 300195 java.math.BigInteger.addOne
  32  0.36% 91.81%       1 300196 java.math.BigInteger.squareToLen
  33  0.36% 92.17%       1 300197 java.math.BigInteger.montReduce
  34  0.36% 92.53%       1 300036 java.util.jar.JarVerifier.<init>
  35  0.36% 92.88%       1 300075 sun.security.util.DerInputBuffer.getBigInteger
  36  0.36% 93.24%       1 300014 java.util.jar.JarFile.getEntry
  37  0.36% 93.59%       1 300097 java.lang.String.toLowerCase
  38  0.36% 93.95%       1 300203 sun.security.provider.SHA.implCompress
  39  0.36% 94.31%       1 300175 java.util.regex.Pattern.newSingle
  40  0.36% 94.66%       1 300224 java.security.Permissions.add
  41  0.36% 95.02%       1 300154 java.lang.System.arraycopy
  42  0.36% 95.37%       1 300116 sun.security.x509.RDN.<init>
  43  0.36% 95.73%       1 300208 java.security.Provider.getTypeAndAlgorithm
  44  0.36% 96.09%       1 300231 java.util.ArrayList.ensureCapacity
  45  0.36% 96.44%       1 300233 java.lang.StringBuffer.append
  46  0.36% 96.80%       1 300234 java.lang.Integer.parseInt
  47  0.36% 97.15%       1 300235 java.lang.Integer.parseInt
  48  0.36% 97.51%       1 300236 K_Occurrence_2.main
  49  0.36% 97.86%       1 300242 java.io.BufferedReader.readLine
  50  0.36% 98.22%       1 300026 java.util.HashMap.<init>
  51  0.36% 98.58%       1 300246 java.lang.String.indexOf
  52  0.36% 98.93%       1 300252 java.nio.Buffer.position
  53  0.36% 99.29%       1 300253 java.lang.String.substring
  54  0.36% 99.64%       1 300254 K_Occurrence_2.main
  55  0.36% 100.00%       1 300256 K_Occurrence_2.main
CPU SAMPLES END
